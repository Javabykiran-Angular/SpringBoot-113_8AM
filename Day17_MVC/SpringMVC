
Spring MVC
	- MVC -- Design pattern -- Common in enterprise web apps.
	- MVC using JSP, Java Beans & Servlet Controller:
		+ M - Model: -- Java Bean.
			- POJOs + Data Handling
			- POJO class (user defined)
			- Data carrier -- Typically doesn't have BL or DB connectivity.
		+ V - View: -- Web page (html, jsp, ...) (user defined)
			- Data Represenation
		+ C - Controller: -- Servlet.
			- Navigation, Coupling between Models & Views.
			- It has two types: Front Controller & Controller(s)
			1 Front Controller: (spring mvc framework)
				- org.springframework.web.servlet.DispatcherServlet
				- create spring application context (WebApplicationContext).
					
					- maps the incoming req to corresponding req handling method.
					- getting req data from incoming req & injecting it into req handling method (as arg) -- as primitive types or model object.
					- provide validation facilties.
					- navigating to the next web component (view or another req handler method).
					- transferring data from req handler method to the view.
					- making state management/security/localization objects available into req handler.
			2 Controller(s): (user defined) 
				- implementation of req handler methods.
	- WebApplicationContext:
		- Each spring web appln needs at least one WebApplicationContext.
		- In simple spring mvc web application, the dispatcher servlet is responsible for creating spring webapplicationcontext. This context is responsible for MVC as well as DI.


		
		